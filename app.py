from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage
import openai
import os

app = Flask(__name__)

# ‡∏î‡∏∂‡∏á token ‡πÅ‡∏•‡∏∞ secret ‡∏à‡∏≤‡∏Å environment variables
line_bot_api = LineBotApi(os.getenv("LINE_CHANNEL_ACCESS_TOKEN"))
handler = WebhookHandler(os.getenv("LINE_CHANNEL_SECRET"))
openai.api_key = os.getenv("OPENAI_API_KEY")

@app.route("/")
def home():
    return "LINE-GPT Bot is running."

# ‚úÖ Route ‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ methods=['POST'] ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Webhook ‡∏Ç‡∏≠‡∏á LINE ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers.get('X-Line-Signature', '')
    body = request.get_data(as_text=True)

    # Log ‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å LINE
    print(">> Signature:", signature)
    print(">> Body:", body)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        print("‚ùå Signature verification failed.")
        abort(400)
    except Exception as e:
        print("‚ùå Unexpected Error:", e)   # üëà ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å
        abort(500)

    return 'OK', 200

# ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    user_msg = event.message.text

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å ChatGPT ‡∏°‡∏≤‡∏ï‡∏≠‡∏ö
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",  # ‡∏´‡∏£‡∏∑‡∏≠ "gpt-4" ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        messages=[
            {"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢‡∏£‡∏ñ‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå"},
            {"role": "user", "content": user_msg}
        ]
    )

    reply_text = response.choices[0].message.content
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=reply_text)
    )

if __name__ == "__main__":
    app.run()
